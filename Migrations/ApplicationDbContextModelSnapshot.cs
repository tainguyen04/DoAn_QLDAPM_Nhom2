// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLCHBanDienThoaiMoi.Data;

#nullable disable

namespace QLCHBanDienThoaiMoi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.ChiTietHoaDonBan", b =>
                {
                    b.Property<int>("HoaDonBanId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("GiaBan")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("HoaDonBanId", "SanPhamId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietHoaDonBan");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.ChiTietHoaDonNhap", b =>
                {
                    b.Property<int>("HoaDonNhapId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<int>("GiaNhap")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("HoaDonNhapId", "SanPhamId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("ChiTietHoaDonNhap");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.DanhMucSanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DanhMucSanPham");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.GioHang", b =>
                {
                    b.Property<int>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int?>("GioHangKhachHangId")
                        .HasColumnType("int");

                    b.Property<int?>("GioHangSanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("KhachHangId", "SanPhamId");

                    b.HasIndex("SanPhamId");

                    b.HasIndex("GioHangKhachHangId", "GioHangSanPhamId");

                    b.ToTable("GioHang");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.HoaDonBan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GioHangKhachHangId")
                        .HasColumnType("int");

                    b.Property<int?>("GioHangSanPhamId")
                        .HasColumnType("int");

                    b.Property<int?>("KhachHangId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBan")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NhanVienId")
                        .HasColumnType("int");

                    b.Property<int>("PhuongThucThanhToan")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhachHangId");

                    b.HasIndex("NhanVienId");

                    b.HasIndex("GioHangKhachHangId", "GioHangSanPhamId");

                    b.ToTable("HoaDonBan");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.HoaDonNhap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NCCId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NCCId");

                    b.ToTable("HoaDonNhap");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhachHang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.NhaCungCap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNCC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NhaCungCap");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.NhanVien", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.PhieuBaoHanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HoaDonBanId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonBanId", "SanPhamId")
                        .IsUnique();

                    b.ToTable("PhieuBaoHanh");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.SanPham", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DanhMucId")
                        .HasColumnType("int");

                    b.Property<int>("GiaBan")
                        .HasColumnType("int");

                    b.Property<int>("GiaNhap")
                        .HasColumnType("int");

                    b.Property<string>("HangSanXuat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("KhuyenMai")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DanhMucId");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.TaiKhoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VaiTro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.ChiTietHoaDonBan", b =>
                {
                    b.HasOne("QLCHBanDienThoaiMoi.Models.HoaDonBan", "HoaDonBan")
                        .WithMany("ChiTietHoaDonBans")
                        .HasForeignKey("HoaDonBanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLCHBanDienThoaiMoi.Models.SanPham", "SanPham")
                        .WithMany("ChiTietHoaDonBans")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDonBan");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.ChiTietHoaDonNhap", b =>
                {
                    b.HasOne("QLCHBanDienThoaiMoi.Models.HoaDonNhap", "HoaDonNhap")
                        .WithMany("ChiTietHoaDonNhaps")
                        .HasForeignKey("HoaDonNhapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLCHBanDienThoaiMoi.Models.SanPham", "SanPham")
                        .WithMany("ChiTietHoaDonNhaps")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDonNhap");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.GioHang", b =>
                {
                    b.HasOne("QLCHBanDienThoaiMoi.Models.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("KhachHangId");

                    b.HasOne("QLCHBanDienThoaiMoi.Models.SanPham", "SanPham")
                        .WithMany("GioHangs")
                        .HasForeignKey("SanPhamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLCHBanDienThoaiMoi.Models.GioHang", null)
                        .WithMany("GioHangs")
                        .HasForeignKey("GioHangKhachHangId", "GioHangSanPhamId");

                    b.Navigation("KhachHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.HoaDonBan", b =>
                {
                    b.HasOne("QLCHBanDienThoaiMoi.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDonBans")
                        .HasForeignKey("KhachHangId");

                    b.HasOne("QLCHBanDienThoaiMoi.Models.NhanVien", "NhanVien")
                        .WithMany("HoaDonBans")
                        .HasForeignKey("NhanVienId");

                    b.HasOne("QLCHBanDienThoaiMoi.Models.GioHang", null)
                        .WithMany("HoaDonBans")
                        .HasForeignKey("GioHangKhachHangId", "GioHangSanPhamId");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.HoaDonNhap", b =>
                {
                    b.HasOne("QLCHBanDienThoaiMoi.Models.NhaCungCap", "NhaCungCap")
                        .WithMany("HoaDonNhaps")
                        .HasForeignKey("NCCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhaCungCap");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.KhachHang", b =>
                {
                    b.HasOne("QLCHBanDienThoaiMoi.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("KhachHang")
                        .HasForeignKey("QLCHBanDienThoaiMoi.Models.KhachHang", "Id");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.NhanVien", b =>
                {
                    b.HasOne("QLCHBanDienThoaiMoi.Models.TaiKhoan", "TaiKhoan")
                        .WithOne("NhanVien")
                        .HasForeignKey("QLCHBanDienThoaiMoi.Models.NhanVien", "Id");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.PhieuBaoHanh", b =>
                {
                    b.HasOne("QLCHBanDienThoaiMoi.Models.ChiTietHoaDonBan", "ChiTietHoaDonBan")
                        .WithOne("PhieuBaoHanh")
                        .HasForeignKey("QLCHBanDienThoaiMoi.Models.PhieuBaoHanh", "HoaDonBanId", "SanPhamId");

                    b.Navigation("ChiTietHoaDonBan");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.SanPham", b =>
                {
                    b.HasOne("QLCHBanDienThoaiMoi.Models.DanhMucSanPham", "DanhMucSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("DanhMucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMucSanPham");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.ChiTietHoaDonBan", b =>
                {
                    b.Navigation("PhieuBaoHanh")
                        .IsRequired();
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.DanhMucSanPham", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.GioHang", b =>
                {
                    b.Navigation("GioHangs");

                    b.Navigation("HoaDonBans");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.HoaDonBan", b =>
                {
                    b.Navigation("ChiTietHoaDonBans");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.HoaDonNhap", b =>
                {
                    b.Navigation("ChiTietHoaDonNhaps");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.KhachHang", b =>
                {
                    b.Navigation("GioHangs");

                    b.Navigation("HoaDonBans");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.NhaCungCap", b =>
                {
                    b.Navigation("HoaDonNhaps");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDonBans");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietHoaDonBans");

                    b.Navigation("ChiTietHoaDonNhaps");

                    b.Navigation("GioHangs");
                });

            modelBuilder.Entity("QLCHBanDienThoaiMoi.Models.TaiKhoan", b =>
                {
                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });
#pragma warning restore 612, 618
        }
    }
}
